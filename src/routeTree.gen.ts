/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ShopLazyImport = createFileRoute('/shop')()
const ReviewsLazyImport = createFileRoute('/reviews')()
const LivresLazyImport = createFileRoute('/livres')()
const GalerieLazyImport = createFileRoute('/galerie')()
const CitationsLazyImport = createFileRoute('/citations')()
const BlogLazyImport = createFileRoute('/blog')()
const IndexLazyImport = createFileRoute('/')()
const ReviewsIndexLazyImport = createFileRoute('/reviews/')()
const LivresIndexLazyImport = createFileRoute('/livres/')()
const ReviewsIdLazyImport = createFileRoute('/reviews/$id')()
const LivresIdLazyImport = createFileRoute('/livres/$id')()

// Create/Update Routes

const ShopLazyRoute = ShopLazyImport.update({
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shop.lazy').then((d) => d.Route))

const ReviewsLazyRoute = ReviewsLazyImport.update({
  path: '/reviews',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/reviews.lazy').then((d) => d.Route))

const LivresLazyRoute = LivresLazyImport.update({
  path: '/livres',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/livres.lazy').then((d) => d.Route))

const GalerieLazyRoute = GalerieLazyImport.update({
  path: '/galerie',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/galerie.lazy').then((d) => d.Route))

const CitationsLazyRoute = CitationsLazyImport.update({
  path: '/citations',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/citations.lazy').then((d) => d.Route))

const BlogLazyRoute = BlogLazyImport.update({
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ReviewsIndexLazyRoute = ReviewsIndexLazyImport.update({
  path: '/',
  getParentRoute: () => ReviewsLazyRoute,
} as any).lazy(() => import('./routes/reviews/index.lazy').then((d) => d.Route))

const LivresIndexLazyRoute = LivresIndexLazyImport.update({
  path: '/',
  getParentRoute: () => LivresLazyRoute,
} as any).lazy(() => import('./routes/livres/index.lazy').then((d) => d.Route))

const ReviewsIdLazyRoute = ReviewsIdLazyImport.update({
  path: '/$id',
  getParentRoute: () => ReviewsLazyRoute,
} as any).lazy(() => import('./routes/reviews/$id.lazy').then((d) => d.Route))

const LivresIdLazyRoute = LivresIdLazyImport.update({
  path: '/$id',
  getParentRoute: () => LivresLazyRoute,
} as any).lazy(() => import('./routes/livres/$id.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogLazyImport
      parentRoute: typeof rootRoute
    }
    '/citations': {
      id: '/citations'
      path: '/citations'
      fullPath: '/citations'
      preLoaderRoute: typeof CitationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/galerie': {
      id: '/galerie'
      path: '/galerie'
      fullPath: '/galerie'
      preLoaderRoute: typeof GalerieLazyImport
      parentRoute: typeof rootRoute
    }
    '/livres': {
      id: '/livres'
      path: '/livres'
      fullPath: '/livres'
      preLoaderRoute: typeof LivresLazyImport
      parentRoute: typeof rootRoute
    }
    '/reviews': {
      id: '/reviews'
      path: '/reviews'
      fullPath: '/reviews'
      preLoaderRoute: typeof ReviewsLazyImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopLazyImport
      parentRoute: typeof rootRoute
    }
    '/livres/$id': {
      id: '/livres/$id'
      path: '/$id'
      fullPath: '/livres/$id'
      preLoaderRoute: typeof LivresIdLazyImport
      parentRoute: typeof LivresLazyImport
    }
    '/reviews/$id': {
      id: '/reviews/$id'
      path: '/$id'
      fullPath: '/reviews/$id'
      preLoaderRoute: typeof ReviewsIdLazyImport
      parentRoute: typeof ReviewsLazyImport
    }
    '/livres/': {
      id: '/livres/'
      path: '/'
      fullPath: '/livres/'
      preLoaderRoute: typeof LivresIndexLazyImport
      parentRoute: typeof LivresLazyImport
    }
    '/reviews/': {
      id: '/reviews/'
      path: '/'
      fullPath: '/reviews/'
      preLoaderRoute: typeof ReviewsIndexLazyImport
      parentRoute: typeof ReviewsLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  BlogLazyRoute,
  CitationsLazyRoute,
  GalerieLazyRoute,
  LivresLazyRoute: LivresLazyRoute.addChildren({
    LivresIdLazyRoute,
    LivresIndexLazyRoute,
  }),
  ReviewsLazyRoute: ReviewsLazyRoute.addChildren({
    ReviewsIdLazyRoute,
    ReviewsIndexLazyRoute,
  }),
  ShopLazyRoute,
})

/* prettier-ignore-end */
